# template for "Stopwatch: The Game"
import simplegui

# define global variables
width = 400
height = 200
counter = 0
attempts = 0
correct = 0

# define helper function format that converts time
# in tenths of seconds into formatted string A:BC.D
def format(t):
    """
    Convert tenths seconds counter into M:SS.s format
    """
    minute = t / 600
    second =  (t % 600) / 10
    tenthsecond = t % 10
    return "%d:%02d.%d" % (minute, second, tenthsecond)
    
# define event handlers for buttons; "Start", "Stop", "Reset"
def start_button_handler():
    """
    Start timer if not already started.
    """
    frame.set_canvas_background('Black')
    if not timer.is_running():
        timer.start()
    
def stop_button_handler():
    """
    Stop timer and update attempt/correct variables
    """
    global attempts, correct
    if timer.is_running():
        timer.stop()
        attempts +=1
        if counter % 10 == 0:
            frame.set_canvas_background('Green')
            correct += 1
        else:
            frame.set_canvas_background('Red')
   
def reset_button_handler():
    """
    Reset timer and gloabl variables to 0
    """
    global counter, attempts, correct
    frame.set_canvas_background('Black')
    if timer.is_running():
        timer.stop()
    counter = 0
    attempts = 0
    correct = 0

# define event handler for timer with 0.1 sec interval
def tick():
    """
    Update counter every tenth second
    """
    global counter
    counter += 1

# define draw handler
def draw(canvas):
    """
    Display data on canvas
    """
    attempt_output = '%d / %d'
    canvas.draw_text(attempt_output % (correct, attempts), (300,50), 36, 'White')
    canvas.draw_text(format(counter), (100,125), 72, 'Yellow')
    
# create frame
frame = simplegui.create_frame("Stop Watch", width, height)

# register event handlers
frame.set_draw_handler(draw)
timer = simplegui.create_timer(100, tick)
frame.add_button("Start", start_button_handler, 100)
frame.add_button("Stop", stop_button_handler, 100)
frame.add_button("Reset", reset_button_handler, 100)

# start frame
frame.start()

# Please remember to review the grading rubric
